/*!
 *
 * Bancha Scaffolding Library
 * Copyright 2011-2013 codeQ e.U.
 *
 * Licensed under The MIT License
 * Redistributions of files must retain the above copyright notice.
 *
 * @package       Bancha.scaffold
 * @copyright     Copyright 2011-2013 codeQ e.U.
 * @link          http://scaffold.banchaproject.org
 * @since         Bancha Scaffold v 0.3.0
 * @license       MIT License (http://www.opensource.org/licenses/mit-license.php)
 * @author        Roland Schuetz <mail@rolandschuetz.at>
 * @version       Bancha Scaffold v 1.0.2
 *
 * For more information go to http://scaffold.banchaproject.org
 */
Ext.define("Bancha.data.override.Validations",{requires:["Ext.data.validations"],alternateClassName:["Bancha.scaffold.data.override.Validations"]},function(){var a=function(b,d){if(!b){return true}if(!Ext.isDefined(d)){return true}var c=b.split(".").pop();return Ext.Array.contains(d,c)};Ext.apply(Ext.data.validations,{numberformatMessage:"is not a number or not in the allowed range",fileMessage:"is not a valid file",numberformat:function(b,c){if(typeof c!=="number"){c=(b.precision===0)?parseInt(c,10):parseFloat(c);if(typeof c!=="number"){return false}}if((Ext.isDefined(b.min)&&b.min>c)||(Ext.isDefined(b.max)&&c>b.max)){return false}return true},file:function(b,c){return a(c,b.extension)}})});Ext.define("Bancha.scaffold.form.field.override.VTypes",{requires:["Ext.form.field.VTypes"]},function(){var a=function(b,d){if(!b){return true}if(!Ext.isDefined(d)){return true}var c=b.split(".").pop();return Ext.Array.contains(d,c)};Ext.apply(Ext.form.field.VTypes,{fileExtension:function(c,b){return a(c,b.validExtensions)},fileExtensionText:"This file type is not allowed.",fileExtensionMask:/[\^\r\n]/})});Ext.define("Bancha.scaffold.form.Config",{uses:["Ext.form.field.VTypes","Ext.data.validations","Ext.window.MessageBox"],constructor:function(b){b=b||{};var c=b.triggeredFrom||"Unknown Origin",a;if(Ext.isString(b)||(Ext.isDefined(b)&&Ext.ModelManager.isRegistered(Ext.ClassManager.getName(b)))){b={target:b}}a=b.target;a=Ext.isString(a)?a:Ext.ClassManager.getName(a);b.target=Ext.ModelManager.getModel(a);if(Ext.isDefined(b.exclude)&&!Ext.isArray(b.exclude)){b.exclude=[]}Ext.apply(this,b)},statics:{setDefault:function(b,a){this.prototype[b]=a},setDefaults:function(a){Ext.apply(this.prototype,a)}},exclude:[],fields:false,fieldDefaults:{},datefieldDefaults:{},fileuploadfieldDefaults:{emptyText:"Select an file"},textfieldDefaults:{},numberfieldDefaults:{},checkboxfieldDefaults:{uncheckedValue:false},storeDefaultClass:"Ext.data.Store",storeDefaults:{autoLoad:true},oneStorePerModel:true,transformFieldConfig:function(b,a){return b},onSave:function(){var a=this.getForm(),b;if(a.isValid()){b=a.hasUpload()?"Uploading files...":"Saving data..";a.submit({waitMsg:b,success:function(c,d){Ext.MessageBox.alert("Success",d.result.msg||"Successfully saved data.")},failure:function(c,d){Ext.MessageBox.alert("Failed",d.result.msg||"Could not save data, unknown error.")}})}},onReset:function(){this.getForm().reset()},buttons:["reset","save"],saveButtonConfig:{iconCls:"icon-save",text:"Save",formBind:true},resetButtonConfig:{iconCls:"icon-reset",text:"Reset"},buildApiConfig:function(a,c){if(Bancha.getModel){return Ext.form.Panel.buildBanchaApiConfig(a,c)}else{if(c){return c}}var b=a.getProxy(),d=b&&b.api&&b.api.read?b.api.read:(b&&b.directFn?b.directFn:undefined);return d?{load:d}:undefined},loadRecord:false,beforeBuild:function(c,b,a){},afterBuild:function(d,c,b,a){}});Ext.define("Bancha.scaffold.grid.Config",{uses:["Ext.data.validations","Ext.window.MessageBox"],constructor:function(b){b=b||{};var c=b.triggeredFrom||"Unknown Origin",a;if(Ext.isString(b)||(Ext.isDefined(b)&&Ext.ModelManager.isRegistered(Ext.ClassManager.getName(b)))){b={target:b}}a=b.target;a=Ext.isString(a)?a:Ext.ClassManager.getName(a);b.target=Ext.ModelManager.getModel(a);if(!Ext.isObject(b.formConfig)||!b.formConfig.$className){b.formConfig=b.formConfig||this.formConfig||{};b.formConfig.triggeredFrom=b.triggeredFrom;b.formConfig=Ext.apply(b.formConfig,{target:b.target});b.formConfig=Ext.create("Bancha.scaffold.form.Config",b.formConfig)}Ext.apply(this,b)},statics:{setDefault:function(b,a){this.prototype[b]=a},setDefaults:function(a){Ext.apply(this.prototype,a)}},exclude:[],fields:false,columnDefaults:{flex:1},gridcolumnDefaults:{},numbercolumnDefaults:{},booleancolumnDefaults:{},datecolumnDefaults:{},formConfig:{},storeDefaultClass:"Ext.data.Store",storeDefaults:{autoLoad:true},oneStorePerModel:true,transformColumnConfig:function(a,b){return a},onCreate:function(){var e=this.getCellEditing(),c=e.grid,a=this.getStore(),b=a.getProxy().getModel(),f,d=false;e.cancelEdit();f=Ext.create(Ext.ClassManager.getName(b),{});a.insert(0,f);Ext.each(c.columns,function(h,g){if(h.hidden!==true){d=g;return false}});if(d){e.startEditByPosition({row:0,column:d})}},onSave:function(){var c=true,d="",b,a=this.getStore();a.each(function(e){if(!e.isValid()){c=false;b=e.get("name")||e.get("title")||(e.phantom?"New entry":e.getId());d+="<br><br><b>"+b+":</b>";e.validate().each(function(f){d+="<br>&nbsp;&nbsp;&nbsp;"+f.field+" "+f.message})}});if(!c){Ext.MessageBox.show({title:"Invalid Data",msg:'<div style="text-align:left; padding-left:50px;">There are errors in your data:'+d+"</div>",icon:Ext.MessageBox.ERROR,buttons:Ext.Msg.OK})}else{a.sync()}},onReset:function(){var a=this.getStore();a.each(function(b){if(b&&b.modified){b.reject()}if(b&&b.phantom){a.remove(b)}});a.each(function(b){if(b&&b.modified){b.reject()}if(b&&b.phantom){a.remove(b)}})},onDelete:function(e,g,d){var b=e.getStore(),f=b.getAt(g),c=Ext.getClassName(f),a=Bancha.scaffold.Util.humanizeClassName(c);b.remove(f);b.sync({success:function(h,i){Ext.MessageBox.show({title:a+" record deleted",msg:a+" record was successfully deleted.",icon:Ext.MessageBox.INFO,buttons:Ext.Msg.OK})},failure:function(h,i){b.add(f);Ext.MessageBox.show({title:a+" record could not be deleted",msg:i.getError()||(a+" record could not be deleted."),icon:Ext.MessageBox.ERROR,buttons:Ext.Msg.OK})}})},editable:true,deletable:true,buttons:["->","create","reset","save"],createButtonConfig:{iconCls:"icon-add",text:"Create"},saveButtonConfig:{iconCls:"icon-save",text:"Save"},resetButtonConfig:{iconCls:"icon-reset",text:"Reset"},destroyButtonConfig:{xtype:"actioncolumn",width:30,items:[{iconCls:"icon-destroy",tooltip:"Delete",handler:Ext.emptyFn}]},beforeBuild:function(c,b,a){},afterBuild:function(d,c,b,a){}});Ext.define("Bancha.scaffold.Util",{singleton:true,toFirstUpper:function(a){if(typeof a!=="string"){return a}if(a.length===1){return a.toUpperCase()}return a[0].toUpperCase()+a.substr(1)},humanize:function(a){a=a.replace(/_id/g,"");a=a.replace(/_/g," ");a=a.replace(/([a-z])([A-Z])/g,function(c,d,b){return d+" "+b.toLowerCase()});return this.toFirstUpper(a)},humanizeClassName:function(a){if(a.indexOf(".")){a=a.substr(a.lastIndexOf(".")+1)}return this.humanize(a)},toTitle:function(a){return a.replace(/ ([a-z])/g,function(b,c){return" "+c.toUpperCase()})},replaceButtonPlaceHolders:function(d,b,e){if(typeof d==="undefined"||d.length===0){return d}for(var c=0,a=d.length;c<a;c++){switch(d[c]){case"create":d[c]=Ext.apply(b.createButtonConfig,{scope:e,handler:b.onCreate});break;case"reset":d[c]=Ext.apply(b.resetButtonConfig,{scope:e,handler:b.onReset});break;case"save":d[c]=Ext.apply(b.saveButtonConfig,{scope:e,handler:b.onSave});break;default:if(d[c].scope==="scaffold-scope-me"){d[c].scope=e}}}return d},getStore:(function(c,b){var a={};return function(g,f){var d=Ext.ClassManager.getName(g),e;f=f||{};if(f.oneStorePerModel&&a[d]){return a[d]}e=Ext.create(f.storeDefaultClass||"Ext.data.Store",Ext.apply({model:d},Ext.clone(f.storeDefaults||{})));if(f.oneStorePerModel){a[d]=e}return e}}()),getDisplayFieldName:function(a){if(Ext.isString(a.displayField)){return a.displayField}var b;if(Ext.versions.extjs.shortVersion<410){b=Ext.Array.pluck(a.prototype.fields.items,"name")}else{b=Ext.Array.pluck(a.getFields(),"name")}if(b.indexOf("name")!==-1){return"name"}if(b.indexOf("title")!==-1){return"title"}if(b.indexOf("code")!==-1){return"code"}return a.idProperty||b[0]},fieldNameToModelAssociationName:function(b,a){if(!Ext.isString(b)){return}var d=b.split("_");if(d.length<2||d[d.length-1]!=="id"){return}d.pop();var c=d.shift();Ext.each(d,function(e){c+=e.substr(0,1).toUpperCase()+e.substr(1)});return a==="belongsTo"?c:c+"s"},getBelongsToAssociation:function(e,c){var a=this.fieldNameToModelAssociationName(e.name,"belongsTo"),d=Ext.isFunction(c.getAssociations)?c.getAssociations():(c.prototype?c.prototype.associations:false),b=(a&&d)?d.get(a):false;return b}});Ext.define("Bancha.scaffold.form.override.Panel",{requires:["Ext.form.Panel","Bancha.scaffold.form.Config","Bancha.scaffold.data.override.Validations","Bancha.scaffold.form.field.override.VTypes","Bancha.scaffold.Util"]},function(){Ext.apply(Ext.form.Panel,{scaffold:false});Ext.override(Ext.form.Panel,{initComponent:function(){var c,a,b;if(this.scaffold){c=Ext.isString(this.scaffold)||Ext.ModelManager.isRegistered(Ext.ClassManager.getName(this.scaffold));if(c||(Ext.isObject(this.scaffold)&&!this.scaffold.$className)){this.scaffold.triggeredFrom="Ext.form.Panel";this.scaffold=Ext.create("Bancha.scaffold.form.Config",this.scaffold)}a=Ext.ClassManager.getClass(this);b=a.buildConfig(this.scaffold,this.initialConfig);Ext.apply(this,b);Ext.apply(this.initialConfig,b)}this.callOverridden()},statics:{fieldToFieldConfigs:{auto:{xtype:"textfield"},string:{xtype:"textfield"},"int":{xtype:"numberfield",allowDecimals:false},"float":{xtype:"numberfield"},"boolean":{xtype:"checkboxfield"},bool:{xtype:"checkboxfield"},date:{xtype:"datefield"}},internalTransformFieldConfig:function(b,a){if(b.name==="id"){b.xtype="hiddenfield"}return b},addValidationRuleConfigs:(function(){var c=/^[a-zA-Z_]+$/.toString(),d=/^[a-zA-Z0-9_]+$/.toString(),b=/^(\w+)([\-+.][\w]+)*@(\w[\-\w]*\.){1,5}([A-Za-z]){2,6}$/.toString(),a=/(((^https?)|(^ftp)):\/\/([\-\w]+\.)+\w{2,3}(\/[%\-\w]+(\.\w{2,})?)*(([\w\-\.\?\\\/+@&#;`~=%!]*)(\.\w{2,})?)*\/?)/i.toString();return function(i,h,g){var f=i.name,e;Ext.Array.forEach(h,function(j){if(j.name!==f){return}switch(j.type){case"presence":i.allowBlank=false;break;case"length":if(i.xtype==="textfield"){if(Ext.isDefined(j.min)){i.minLength=j.min}if(Ext.isDefined(j.max)){i.maxLength=j.max}}break;case"format":switch(j.matcher.toString()){case c:i.vtype="alpha";break;case d:i.vtype="alphanum";break;case b:i.vtype="email";break;case a:i.vtype="url";break;default:break}break;case"numberformat":if(i.xtype==="numberfield"){if(Ext.isDefined(j.min)){i.minValue=j.min}if(Ext.isDefined(j.max)){i.maxValue=j.max}if(Ext.isDefined(j.precision)){i.decimalPrecision=j.precision}}break;case"file":i.xtype="fileuploadfield";Ext.apply(i,g.fileuploadfieldDefaults);if(Ext.isString(j.extension)){j.extension=[j.extension]}if(Ext.isArray(j.extension)){i.vtype="fileExtension";i.validExtensions=j.extension}break;default:break}});return i}}()),buildDefaultFieldFromModelType:function(b,d){d=d||{};var c=Ext.clone(this.fieldToFieldConfigs[b]),e=Ext.clone(d.fieldDefaults||this.fieldDefaults),a=Ext.clone(d[c.xtype+"Defaults"]||this[c.xtype+"Defaults"]);return Ext.apply(e,c,a)},buildFieldConfig:function(b,c,d,h){var f=b.type.type,e=c.target,g=this.buildDefaultFieldFromModelType(f,c),i=Bancha.scaffold.Util,a;g.name=b.name;if(!h){g.fieldLabel=i.humanize(b.name)}if(f==="date"&&!h&&b.dateFormat){g.format=b.dateFormat}if(Ext.isDefined(d)&&d.length){g=this.addValidationRuleConfigs(g,d,c)}a=i.getBelongsToAssociation(g,e);if(a){Ext.apply(g,{xtype:"combobox",store:i.getStore(a.associatedModel,c),displayField:i.getDisplayFieldName(a.associatedModel),valueField:a.associatedModel.prototype.idProperty||"id",queryMode:"local"})}g=this.internalTransformFieldConfig(g,f);if(typeof c.transformFieldConfig==="function"){g=c.transformFieldConfig(g,f)}if(h&&g.xtype==="fileuploadfield"){g=undefined}return g},buildBanchaApiConfig:function(b,c){c=c||{};var a=Ext.ClassManager.getName(b),e=a.substr(Bancha.modelNamespace.length+1),d=Bancha.getStubsNamespace()[e];return{load:c.read||d.read,submit:c.submit||d.submit}},buildButtonScope:(function(){var a={getPanel:function(){return this.panel||Ext.ComponentManager.get(this.id)},getForm:function(){return this.form||this.getPanel().getForm()}};return function(b){return Ext.apply({id:b},a)}}()),buildConfig:function(b,i){i=i||{};var e=[],d=Ext.ModelManager.getModel(b.target),f=this,h,a,c,g;h=b.beforeBuild(d,b,i)||{};c=d.prototype.validations;d.prototype.fields.each(function(j){if((!Ext.isArray(b.fields)||b.fields.indexOf(j.name)!==-1)&&b.exclude.indexOf(j.name)===-1){e.push(f.buildFieldConfig(j,b,c))}});Ext.each(e,function(j){if(j.xtype==="fileuploadfield"){h.isUpload=true;h.fileUpload=true;return false}return true});a=i.id||Ext.id(null,"formpanel-");h.id=a;if(!b.hasOwnProperty("buttons")){b.buttons=Ext.clone(b.buttons||[])}b.buttons=Bancha.scaffold.Util.replaceButtonPlaceHolders(b.buttons,b,this.buildButtonScope(a));Ext.apply(h,i,{id:a,api:b.buildApiConfig(d,i.api),paramOrder:["data"],items:e,buttons:b.buttons});h.scaffold=b;if(Ext.isDefined(b.loadRecord)&&b.loadRecord!==false){g=function(k,j){k.load({params:{data:{data:{id:b.loadRecord}}}})};h.listeners=h.listeners||{};if(h.listeners.afterrender){h.listeners.afterrender=Ext.Function.createSequence(h.listeners.afterrender,g)}else{h.listeners.afterrender=g}}return b.afterBuild(h,d,b,i)||h}}});if(parseInt(Ext.versions.extjs.shortVersion,10)<410){Ext.apply(Ext.form.Panel,Ext.form.Panel.prototype.statics)}});Ext.define("Bancha.scaffold.grid.override.Panel",{requires:["Ext.grid.Panel","Bancha.scaffold.form.Config","Bancha.scaffold.grid.Config","Bancha.scaffold.data.override.Validations","Bancha.scaffold.form.field.override.VTypes","Bancha.scaffold.Util"]},function(){Ext.apply(Ext.grid.Panel,{scaffold:false});Ext.override(Ext.grid.Panel,{initComponent:function(){var c,a,b;if(this.scaffold){c=Ext.isString(this.scaffold)||Ext.ModelManager.isRegistered(Ext.ClassManager.getName(this.scaffold));if(c||(Ext.isObject(this.scaffold)&&!this.scaffold.$className)){this.scaffold.triggeredFrom="Ext.grid.Panel";this.scaffold=Ext.create("Bancha.scaffold.grid.Config",this.scaffold)}a=Ext.ClassManager.getClass(this);b=a.buildConfig(this.scaffold,this.initialConfig);Ext.apply(this,b);Ext.apply(this.initialConfig,b)}this.callOverridden()},statics:{fieldToColumnConfigs:{auto:{xtype:"gridcolumn"},string:{xtype:"gridcolumn"},"int":{xtype:"numbercolumn",format:"0"},"float":{xtype:"numbercolumn"},"boolean":{xtype:"booleancolumn"},bool:{xtype:"booleancolumn"},date:{xtype:"datecolumn"}},internalTransformColumnConfig:function(a,b){if(a.dataIndex==="id"){a.hidden=true;a.editor=undefined}return a},buildDefaultColumnFromModelType:function(c,d){d=d||{};var b=this.fieldToColumnConfigs[c],a=Ext.clone(d.columnDefaults||this.columnDefaults),e=d[b.xtype+"Defaults"]||this[b.xtype+"Defaults"];return Ext.apply(a,b,e)},buildColumnConfig:function(h,b,d,a){var g=h.type.type,e=this.buildDefaultColumnFromModelType(g,b),f=b.target,c,i,j;if(h.name){e.text=Bancha.scaffold.Util.humanize(h.name);e.dataIndex=h.name}c=Bancha.scaffold.Util.getBelongsToAssociation(h,f);if(c){i=Bancha.scaffold.Util.getStore(c.associatedModel,b);j=Bancha.scaffold.Util.getDisplayFieldName(c.associatedModel);e.renderer=function(l){var k=i.getById(l);return k?k.get(j):(Bancha.t?Bancha.t("Unknown"):"Unknown")};a.render=Ext.Function.createSequence(a.render||Ext.emptyFn,function(k){if(i.getCount()===0){i.on("load",function(m,l,o,n){if(o){k.getView().refresh()}})}})}if(b.editable){e.editor=Ext.form.Panel.buildFieldConfig(h,b.formConfig,d,true);e.editor=Ext.form.Panel.internalTransformFieldConfig(e.editor,g);if(typeof b.formConfig.transformFieldConfig==="function"){e.editor=b.formConfig.transformFieldConfig(e.editor,g)}}e=Ext.grid.Panel.internalTransformColumnConfig(e,g);if(typeof b.transformColumnConfig==="function"){e=b.transformColumnConfig(e,g)}return e},buildColumns:function(b,f){var e=[],a=b.target,g=this,d,c;if(!Ext.isArray(b.exclude)){b.exclude=[]}d=a.prototype.validations;a.prototype.fields.each(function(h){if((!Ext.isArray(b.fields)||b.fields.indexOf(h.name)!==-1)&&b.exclude.indexOf(h.name)===-1){e.push(g.buildColumnConfig(h,b,d,f))}});if(b.deletable){c=Ext.clone(b.destroyButtonConfig);if(c.items[0].handler===Ext.emptyFn){c.items[0].handler=b.onDelete}e.push(c)}return e},buildConfig:function(d,a){a=a||{};var c=Ext.ModelManager.getModel(d.target),h,g,b,f,e;h=d.beforeBuild(c,d,a)||{};b=Bancha.scaffold.Util.getStore(c,d);e={};Ext.apply(h,{store:b,columns:this.buildColumns(d,e),listeners:e});if(d.editable){g=Ext.create("Ext.grid.plugin.CellEditing",{clicksToEdit:2});Ext.apply(h,{selType:"cellmodel",plugins:[g]})}if(d.buttons&&d.buttons.length){f={getCellEditing:function(){return g},getStore:function(){return b}};if(!d.hasOwnProperty("buttons")){d.buttons=Ext.clone(d.buttons||[])}d.buttons=Bancha.scaffold.Util.replaceButtonPlaceHolders(d.buttons,d,f);h.dockedItems=[{xtype:"toolbar",dock:"bottom",ui:"footer",items:d.buttons}]}if(Ext.isObject(a)){h=Ext.apply(h,a)}h.scaffold=d;return d.afterBuild(h,c,d,a)||h}}});if(parseInt(Ext.versions.extjs.shortVersion,10)<410){Ext.apply(Ext.grid.Panel,Ext.grid.Panel.prototype.statics)}});Ext.define("Bancha.scaffold.grid.ManagementPanel",{extend:"Ext.tab.Panel",alias:"widget.managementpanel",models:[],panelDefaults:{},scaffoldDefaults:{},initComponent:function(){this.models=this.models||[];this.items=this.items||[];var a=this.items,b=this;Ext.each(this.models,function(e){var c=Ext.isString(e)?e:e.getName();e=Ext.ModelManager.getModel(c);if(!e&&Bancha.modelNamespace){e=Ext.ModelManager.getModel(Bancha.modelNamespace+"."+c)}var d={xtype:"gridpanel",title:Bancha.scaffold.Util.toTitle(Bancha.scaffold.Util.humanizeClassName(c)),scaffold:{target:c,buttons:false,deletable:true}};var f=e.getProxy();if(f.api){var g=["->"];if(f.api.create){g.push("create")}if(f.api.create||f.api.update){g.push("reset");g.push("save")}if(g.length>1){d.scaffold.buttons=g}else{d.scaffold.editable=false}if(!f.api.destroy){d.scaffold.deletable=false}}else{if(f.writer){delete d.scaffold.buttons}}d=Ext.apply(d,b.panelDefaults);d.scaffold=Ext.apply(d.scaffold,b.scaffoldDefaults);a.push(d)});this.callParent()}});